<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shanli.jf.mapper.AreaDao" >
  <resultMap id="BaseResultMap" type="com.shanli.jf.model.Area" >
    <id column="id" property="id" jdbcType="SMALLINT" />
    <result column="reid" property="reid" jdbcType="SMALLINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sort_order" property="sortOrder" jdbcType="SMALLINT" />
    <result column="is_open" property="isOpen" jdbcType="TINYINT" />
    <result column="domain" property="domain" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, reid, name, sort_order, is_open, domain
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shanli.jf.model.AreaQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select 
    id,reid,name,sort_order,is_open,domain
    from area
    where id = #{id,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from area
    where id = #{id,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shanli.jf.model.AreaQuery" >
    delete from area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shanli.jf.model.Area" >
    insert into area (id, reid, name, 
      sort_order, is_open, domain
      )
    values (#{id,jdbcType=SMALLINT}, #{reid,jdbcType=SMALLINT}, #{name,jdbcType=VARCHAR}, 
      #{sortOrder,jdbcType=SMALLINT}, #{isOpen,jdbcType=TINYINT}, #{domain,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shanli.jf.model.Area" >
    insert into area
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="reid != null" >
        reid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="isOpen != null" >
        is_open,
      </if>
      <if test="domain != null" >
        domain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=SMALLINT},
      </if>
      <if test="reid != null" >
        #{reid,jdbcType=SMALLINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="isOpen != null" >
        #{isOpen,jdbcType=TINYINT},
      </if>
      <if test="domain != null" >
        #{domain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shanli.jf.model.AreaQuery" resultType="java.lang.Integer" >
    select count(*) from area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update area
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=SMALLINT},
      </if>
      <if test="record.reid != null" >
        reid = #{record.reid,jdbcType=SMALLINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sortOrder != null" >
        sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="record.isOpen != null" >
        is_open = #{record.isOpen,jdbcType=TINYINT},
      </if>
      <if test="record.domain != null" >
        domain = #{record.domain,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update area
    set id = #{record.id,jdbcType=SMALLINT},
      reid = #{record.reid,jdbcType=SMALLINT},
      name = #{record.name,jdbcType=VARCHAR},
      sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      is_open = #{record.isOpen,jdbcType=TINYINT},
      domain = #{record.domain,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanli.jf.model.Area" >
    update area
    <set >
      <if test="reid != null" >
        reid = #{reid,jdbcType=SMALLINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="isOpen != null" >
        is_open = #{isOpen,jdbcType=TINYINT},
      </if>
      <if test="domain != null" >
        domain = #{domain,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanli.jf.model.Area" >
    update area
    set reid = #{reid,jdbcType=SMALLINT},
      name = #{name,jdbcType=VARCHAR},
      sort_order = #{sortOrder,jdbcType=SMALLINT},
      is_open = #{isOpen,jdbcType=TINYINT},
      domain = #{domain,jdbcType=VARCHAR}
    where id = #{id,jdbcType=SMALLINT}
  </update>
</mapper>