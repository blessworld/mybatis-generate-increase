<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shanli.jf.mapper.LoanProductInfoDao" >
  <resultMap id="BaseResultMap" type="com.shanli.jf.model.LoanProductInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="min_borrow_amount" property="minBorrowAmount" jdbcType="INTEGER" />
    <result column="max_borrow_amount" property="maxBorrowAmount" jdbcType="INTEGER" />
    <result column="rate_type" property="rateType" jdbcType="VARCHAR" />
    <result column="rate" property="rate" jdbcType="DECIMAL" />
    <result column="duration_type" property="durationType" jdbcType="VARCHAR" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="repayment_type" property="repaymentType" jdbcType="VARCHAR" />
    <result column="calc_risk_type" property="calcRiskType" jdbcType="VARCHAR" />
    <result column="risk_money" property="riskMoney" jdbcType="DECIMAL" />
    <result column="calc_borfee_type" property="calcBorfeeType" jdbcType="VARCHAR" />
    <result column="borrow_fee" property="borrowFee" jdbcType="DECIMAL" />
    <result column="borrow_fee_paytype" property="borrowFeePaytype" jdbcType="VARCHAR" />
    <result column="calc_serfee_type" property="calcSerfeeType" jdbcType="VARCHAR" />
    <result column="service_fee" property="serviceFee" jdbcType="DECIMAL" />
    <result column="service_fee_paytype" property="serviceFeePaytype" jdbcType="VARCHAR" />
    <result column="expired_rate_type" property="expiredRateType" jdbcType="VARCHAR" />
    <result column="expired_rate" property="expiredRate" jdbcType="DECIMAL" />
    <result column="ealry_fee_type" property="ealryFeeType" jdbcType="VARCHAR" />
    <result column="ealry_fee_rate" property="ealryFeeRate" jdbcType="DECIMAL" />
    <result column="ealry_charge_type" property="ealryChargeType" jdbcType="VARCHAR" />
    <result column="ealry_charge_rate" property="ealryChargeRate" jdbcType="DECIMAL" />
    <result column="repayment_sequence" property="repaymentSequence" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, product_id, min_borrow_amount, max_borrow_amount, rate_type, rate, duration_type, 
      duration, repayment_type, calc_risk_type, risk_money, calc_borfee_type, borrow_fee, 
      borrow_fee_paytype, calc_serfee_type, service_fee, service_fee_paytype, expired_rate_type, 
      expired_rate, ealry_fee_type, ealry_fee_rate, ealry_charge_type, ealry_charge_rate, 
      repayment_sequence, create_time, update_time
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shanli.jf.model.LoanProductInfoQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loan_product_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,product_id,min_borrow_amount,max_borrow_amount,rate_type,rate,duration_type,duration,repayment_type,calc_risk_type,risk_money,calc_borfee_type,borrow_fee,borrow_fee_paytype,calc_serfee_type,service_fee,service_fee_paytype,expired_rate_type,expired_rate,ealry_fee_type,ealry_fee_rate,ealry_charge_type,ealry_charge_rate,repayment_sequence,create_time,update_time
    from loan_product_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from loan_product_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shanli.jf.model.LoanProductInfoQuery" >
    delete from loan_product_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shanli.jf.model.LoanProductInfo" >
    insert into loan_product_info (id, product_id, min_borrow_amount, 
      max_borrow_amount, rate_type, rate, 
      duration_type, duration, repayment_type, 
      calc_risk_type, risk_money, calc_borfee_type, 
      borrow_fee, borrow_fee_paytype, calc_serfee_type, 
      service_fee, service_fee_paytype, expired_rate_type, 
      expired_rate, ealry_fee_type, ealry_fee_rate, 
      ealry_charge_type, ealry_charge_rate, repayment_sequence, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=VARCHAR}, #{minBorrowAmount,jdbcType=INTEGER}, 
      #{maxBorrowAmount,jdbcType=INTEGER}, #{rateType,jdbcType=VARCHAR}, #{rate,jdbcType=DECIMAL}, 
      #{durationType,jdbcType=VARCHAR}, #{duration,jdbcType=INTEGER}, #{repaymentType,jdbcType=VARCHAR}, 
      #{calcRiskType,jdbcType=VARCHAR}, #{riskMoney,jdbcType=DECIMAL}, #{calcBorfeeType,jdbcType=VARCHAR}, 
      #{borrowFee,jdbcType=DECIMAL}, #{borrowFeePaytype,jdbcType=VARCHAR}, #{calcSerfeeType,jdbcType=VARCHAR}, 
      #{serviceFee,jdbcType=DECIMAL}, #{serviceFeePaytype,jdbcType=VARCHAR}, #{expiredRateType,jdbcType=VARCHAR}, 
      #{expiredRate,jdbcType=DECIMAL}, #{ealryFeeType,jdbcType=VARCHAR}, #{ealryFeeRate,jdbcType=DECIMAL}, 
      #{ealryChargeType,jdbcType=VARCHAR}, #{ealryChargeRate,jdbcType=DECIMAL}, #{repaymentSequence,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.shanli.jf.model.LoanProductInfo" >
    insert into loan_product_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="minBorrowAmount != null" >
        min_borrow_amount,
      </if>
      <if test="maxBorrowAmount != null" >
        max_borrow_amount,
      </if>
      <if test="rateType != null" >
        rate_type,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="durationType != null" >
        duration_type,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="repaymentType != null" >
        repayment_type,
      </if>
      <if test="calcRiskType != null" >
        calc_risk_type,
      </if>
      <if test="riskMoney != null" >
        risk_money,
      </if>
      <if test="calcBorfeeType != null" >
        calc_borfee_type,
      </if>
      <if test="borrowFee != null" >
        borrow_fee,
      </if>
      <if test="borrowFeePaytype != null" >
        borrow_fee_paytype,
      </if>
      <if test="calcSerfeeType != null" >
        calc_serfee_type,
      </if>
      <if test="serviceFee != null" >
        service_fee,
      </if>
      <if test="serviceFeePaytype != null" >
        service_fee_paytype,
      </if>
      <if test="expiredRateType != null" >
        expired_rate_type,
      </if>
      <if test="expiredRate != null" >
        expired_rate,
      </if>
      <if test="ealryFeeType != null" >
        ealry_fee_type,
      </if>
      <if test="ealryFeeRate != null" >
        ealry_fee_rate,
      </if>
      <if test="ealryChargeType != null" >
        ealry_charge_type,
      </if>
      <if test="ealryChargeRate != null" >
        ealry_charge_rate,
      </if>
      <if test="repaymentSequence != null" >
        repayment_sequence,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="minBorrowAmount != null" >
        #{minBorrowAmount,jdbcType=INTEGER},
      </if>
      <if test="maxBorrowAmount != null" >
        #{maxBorrowAmount,jdbcType=INTEGER},
      </if>
      <if test="rateType != null" >
        #{rateType,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="durationType != null" >
        #{durationType,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="repaymentType != null" >
        #{repaymentType,jdbcType=VARCHAR},
      </if>
      <if test="calcRiskType != null" >
        #{calcRiskType,jdbcType=VARCHAR},
      </if>
      <if test="riskMoney != null" >
        #{riskMoney,jdbcType=DECIMAL},
      </if>
      <if test="calcBorfeeType != null" >
        #{calcBorfeeType,jdbcType=VARCHAR},
      </if>
      <if test="borrowFee != null" >
        #{borrowFee,jdbcType=DECIMAL},
      </if>
      <if test="borrowFeePaytype != null" >
        #{borrowFeePaytype,jdbcType=VARCHAR},
      </if>
      <if test="calcSerfeeType != null" >
        #{calcSerfeeType,jdbcType=VARCHAR},
      </if>
      <if test="serviceFee != null" >
        #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="serviceFeePaytype != null" >
        #{serviceFeePaytype,jdbcType=VARCHAR},
      </if>
      <if test="expiredRateType != null" >
        #{expiredRateType,jdbcType=VARCHAR},
      </if>
      <if test="expiredRate != null" >
        #{expiredRate,jdbcType=DECIMAL},
      </if>
      <if test="ealryFeeType != null" >
        #{ealryFeeType,jdbcType=VARCHAR},
      </if>
      <if test="ealryFeeRate != null" >
        #{ealryFeeRate,jdbcType=DECIMAL},
      </if>
      <if test="ealryChargeType != null" >
        #{ealryChargeType,jdbcType=VARCHAR},
      </if>
      <if test="ealryChargeRate != null" >
        #{ealryChargeRate,jdbcType=DECIMAL},
      </if>
      <if test="repaymentSequence != null" >
        #{repaymentSequence,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shanli.jf.model.LoanProductInfoQuery" resultType="java.lang.Integer" >
    select count(*) from loan_product_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update loan_product_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.minBorrowAmount != null" >
        min_borrow_amount = #{record.minBorrowAmount,jdbcType=INTEGER},
      </if>
      <if test="record.maxBorrowAmount != null" >
        max_borrow_amount = #{record.maxBorrowAmount,jdbcType=INTEGER},
      </if>
      <if test="record.rateType != null" >
        rate_type = #{record.rateType,jdbcType=VARCHAR},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=DECIMAL},
      </if>
      <if test="record.durationType != null" >
        duration_type = #{record.durationType,jdbcType=VARCHAR},
      </if>
      <if test="record.duration != null" >
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.repaymentType != null" >
        repayment_type = #{record.repaymentType,jdbcType=VARCHAR},
      </if>
      <if test="record.calcRiskType != null" >
        calc_risk_type = #{record.calcRiskType,jdbcType=VARCHAR},
      </if>
      <if test="record.riskMoney != null" >
        risk_money = #{record.riskMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.calcBorfeeType != null" >
        calc_borfee_type = #{record.calcBorfeeType,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowFee != null" >
        borrow_fee = #{record.borrowFee,jdbcType=DECIMAL},
      </if>
      <if test="record.borrowFeePaytype != null" >
        borrow_fee_paytype = #{record.borrowFeePaytype,jdbcType=VARCHAR},
      </if>
      <if test="record.calcSerfeeType != null" >
        calc_serfee_type = #{record.calcSerfeeType,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceFee != null" >
        service_fee = #{record.serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="record.serviceFeePaytype != null" >
        service_fee_paytype = #{record.serviceFeePaytype,jdbcType=VARCHAR},
      </if>
      <if test="record.expiredRateType != null" >
        expired_rate_type = #{record.expiredRateType,jdbcType=VARCHAR},
      </if>
      <if test="record.expiredRate != null" >
        expired_rate = #{record.expiredRate,jdbcType=DECIMAL},
      </if>
      <if test="record.ealryFeeType != null" >
        ealry_fee_type = #{record.ealryFeeType,jdbcType=VARCHAR},
      </if>
      <if test="record.ealryFeeRate != null" >
        ealry_fee_rate = #{record.ealryFeeRate,jdbcType=DECIMAL},
      </if>
      <if test="record.ealryChargeType != null" >
        ealry_charge_type = #{record.ealryChargeType,jdbcType=VARCHAR},
      </if>
      <if test="record.ealryChargeRate != null" >
        ealry_charge_rate = #{record.ealryChargeRate,jdbcType=DECIMAL},
      </if>
      <if test="record.repaymentSequence != null" >
        repayment_sequence = #{record.repaymentSequence,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update loan_product_info
    set id = #{record.id,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=VARCHAR},
      min_borrow_amount = #{record.minBorrowAmount,jdbcType=INTEGER},
      max_borrow_amount = #{record.maxBorrowAmount,jdbcType=INTEGER},
      rate_type = #{record.rateType,jdbcType=VARCHAR},
      rate = #{record.rate,jdbcType=DECIMAL},
      duration_type = #{record.durationType,jdbcType=VARCHAR},
      duration = #{record.duration,jdbcType=INTEGER},
      repayment_type = #{record.repaymentType,jdbcType=VARCHAR},
      calc_risk_type = #{record.calcRiskType,jdbcType=VARCHAR},
      risk_money = #{record.riskMoney,jdbcType=DECIMAL},
      calc_borfee_type = #{record.calcBorfeeType,jdbcType=VARCHAR},
      borrow_fee = #{record.borrowFee,jdbcType=DECIMAL},
      borrow_fee_paytype = #{record.borrowFeePaytype,jdbcType=VARCHAR},
      calc_serfee_type = #{record.calcSerfeeType,jdbcType=VARCHAR},
      service_fee = #{record.serviceFee,jdbcType=DECIMAL},
      service_fee_paytype = #{record.serviceFeePaytype,jdbcType=VARCHAR},
      expired_rate_type = #{record.expiredRateType,jdbcType=VARCHAR},
      expired_rate = #{record.expiredRate,jdbcType=DECIMAL},
      ealry_fee_type = #{record.ealryFeeType,jdbcType=VARCHAR},
      ealry_fee_rate = #{record.ealryFeeRate,jdbcType=DECIMAL},
      ealry_charge_type = #{record.ealryChargeType,jdbcType=VARCHAR},
      ealry_charge_rate = #{record.ealryChargeRate,jdbcType=DECIMAL},
      repayment_sequence = #{record.repaymentSequence,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanli.jf.model.LoanProductInfo" >
    update loan_product_info
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="minBorrowAmount != null" >
        min_borrow_amount = #{minBorrowAmount,jdbcType=INTEGER},
      </if>
      <if test="maxBorrowAmount != null" >
        max_borrow_amount = #{maxBorrowAmount,jdbcType=INTEGER},
      </if>
      <if test="rateType != null" >
        rate_type = #{rateType,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="durationType != null" >
        duration_type = #{durationType,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="repaymentType != null" >
        repayment_type = #{repaymentType,jdbcType=VARCHAR},
      </if>
      <if test="calcRiskType != null" >
        calc_risk_type = #{calcRiskType,jdbcType=VARCHAR},
      </if>
      <if test="riskMoney != null" >
        risk_money = #{riskMoney,jdbcType=DECIMAL},
      </if>
      <if test="calcBorfeeType != null" >
        calc_borfee_type = #{calcBorfeeType,jdbcType=VARCHAR},
      </if>
      <if test="borrowFee != null" >
        borrow_fee = #{borrowFee,jdbcType=DECIMAL},
      </if>
      <if test="borrowFeePaytype != null" >
        borrow_fee_paytype = #{borrowFeePaytype,jdbcType=VARCHAR},
      </if>
      <if test="calcSerfeeType != null" >
        calc_serfee_type = #{calcSerfeeType,jdbcType=VARCHAR},
      </if>
      <if test="serviceFee != null" >
        service_fee = #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="serviceFeePaytype != null" >
        service_fee_paytype = #{serviceFeePaytype,jdbcType=VARCHAR},
      </if>
      <if test="expiredRateType != null" >
        expired_rate_type = #{expiredRateType,jdbcType=VARCHAR},
      </if>
      <if test="expiredRate != null" >
        expired_rate = #{expiredRate,jdbcType=DECIMAL},
      </if>
      <if test="ealryFeeType != null" >
        ealry_fee_type = #{ealryFeeType,jdbcType=VARCHAR},
      </if>
      <if test="ealryFeeRate != null" >
        ealry_fee_rate = #{ealryFeeRate,jdbcType=DECIMAL},
      </if>
      <if test="ealryChargeType != null" >
        ealry_charge_type = #{ealryChargeType,jdbcType=VARCHAR},
      </if>
      <if test="ealryChargeRate != null" >
        ealry_charge_rate = #{ealryChargeRate,jdbcType=DECIMAL},
      </if>
      <if test="repaymentSequence != null" >
        repayment_sequence = #{repaymentSequence,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanli.jf.model.LoanProductInfo" >
    update loan_product_info
    set product_id = #{productId,jdbcType=VARCHAR},
      min_borrow_amount = #{minBorrowAmount,jdbcType=INTEGER},
      max_borrow_amount = #{maxBorrowAmount,jdbcType=INTEGER},
      rate_type = #{rateType,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=DECIMAL},
      duration_type = #{durationType,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=INTEGER},
      repayment_type = #{repaymentType,jdbcType=VARCHAR},
      calc_risk_type = #{calcRiskType,jdbcType=VARCHAR},
      risk_money = #{riskMoney,jdbcType=DECIMAL},
      calc_borfee_type = #{calcBorfeeType,jdbcType=VARCHAR},
      borrow_fee = #{borrowFee,jdbcType=DECIMAL},
      borrow_fee_paytype = #{borrowFeePaytype,jdbcType=VARCHAR},
      calc_serfee_type = #{calcSerfeeType,jdbcType=VARCHAR},
      service_fee = #{serviceFee,jdbcType=DECIMAL},
      service_fee_paytype = #{serviceFeePaytype,jdbcType=VARCHAR},
      expired_rate_type = #{expiredRateType,jdbcType=VARCHAR},
      expired_rate = #{expiredRate,jdbcType=DECIMAL},
      ealry_fee_type = #{ealryFeeType,jdbcType=VARCHAR},
      ealry_fee_rate = #{ealryFeeRate,jdbcType=DECIMAL},
      ealry_charge_type = #{ealryChargeType,jdbcType=VARCHAR},
      ealry_charge_rate = #{ealryChargeRate,jdbcType=DECIMAL},
      repayment_sequence = #{repaymentSequence,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>