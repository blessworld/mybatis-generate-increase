<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shanli.jf.mapper.UserIdCardDao" >
  <resultMap id="BaseResultMap" type="com.shanli.jf.model.UserIdCard" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="race" property="race" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="id_card_number" property="idCardNumber" jdbcType="VARCHAR" />
    <result column="valid_date" property="validDate" jdbcType="VARCHAR" />
    <result column="issued_by" property="issuedBy" jdbcType="VARCHAR" />
    <result column="front_url" property="frontUrl" jdbcType="VARCHAR" />
    <result column="back_url" property="backUrl" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, user_id, create_date, update_date, name, birthday, race, address, gender, id_card_number, 
      valid_date, issued_by, front_url, back_url, status
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shanli.jf.model.UserIdCardQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_id_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,user_id,create_date,update_date,name,birthday,race,address,gender,id_card_number,valid_date,issued_by,front_url,back_url,status
    from user_id_card
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_id_card
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shanli.jf.model.UserIdCardQuery" >
    delete from user_id_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shanli.jf.model.UserIdCard" >
    insert into user_id_card (id, user_id, create_date, 
      update_date, name, birthday, 
      race, address, gender, 
      id_card_number, valid_date, issued_by, 
      front_url, back_url, status
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{createDate,jdbcType=INTEGER}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, 
      #{race,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{idCardNumber,jdbcType=VARCHAR}, #{validDate,jdbcType=VARCHAR}, #{issuedBy,jdbcType=VARCHAR}, 
      #{frontUrl,jdbcType=VARCHAR}, #{backUrl,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shanli.jf.model.UserIdCard" >
    insert into user_id_card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="race != null" >
        race,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="idCardNumber != null" >
        id_card_number,
      </if>
      <if test="validDate != null" >
        valid_date,
      </if>
      <if test="issuedBy != null" >
        issued_by,
      </if>
      <if test="frontUrl != null" >
        front_url,
      </if>
      <if test="backUrl != null" >
        back_url,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="race != null" >
        #{race,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="idCardNumber != null" >
        #{idCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="validDate != null" >
        #{validDate,jdbcType=VARCHAR},
      </if>
      <if test="issuedBy != null" >
        #{issuedBy,jdbcType=VARCHAR},
      </if>
      <if test="frontUrl != null" >
        #{frontUrl,jdbcType=VARCHAR},
      </if>
      <if test="backUrl != null" >
        #{backUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shanli.jf.model.UserIdCardQuery" resultType="java.lang.Integer" >
    select count(*) from user_id_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_id_card
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.race != null" >
        race = #{record.race,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardNumber != null" >
        id_card_number = #{record.idCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.validDate != null" >
        valid_date = #{record.validDate,jdbcType=VARCHAR},
      </if>
      <if test="record.issuedBy != null" >
        issued_by = #{record.issuedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.frontUrl != null" >
        front_url = #{record.frontUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.backUrl != null" >
        back_url = #{record.backUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_id_card
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      race = #{record.race,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      id_card_number = #{record.idCardNumber,jdbcType=VARCHAR},
      valid_date = #{record.validDate,jdbcType=VARCHAR},
      issued_by = #{record.issuedBy,jdbcType=VARCHAR},
      front_url = #{record.frontUrl,jdbcType=VARCHAR},
      back_url = #{record.backUrl,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanli.jf.model.UserIdCard" >
    update user_id_card
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="race != null" >
        race = #{race,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="idCardNumber != null" >
        id_card_number = #{idCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="validDate != null" >
        valid_date = #{validDate,jdbcType=VARCHAR},
      </if>
      <if test="issuedBy != null" >
        issued_by = #{issuedBy,jdbcType=VARCHAR},
      </if>
      <if test="frontUrl != null" >
        front_url = #{frontUrl,jdbcType=VARCHAR},
      </if>
      <if test="backUrl != null" >
        back_url = #{backUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanli.jf.model.UserIdCard" >
    update user_id_card
    set user_id = #{userId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      race = #{race,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      id_card_number = #{idCardNumber,jdbcType=VARCHAR},
      valid_date = #{validDate,jdbcType=VARCHAR},
      issued_by = #{issuedBy,jdbcType=VARCHAR},
      front_url = #{frontUrl,jdbcType=VARCHAR},
      back_url = #{backUrl,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>